#include "Buzzer.h"

void Buzzer::initialize(int pin, HardwareInterface &hardwareInterface) {
  _pin = pin;
  _hardwareInterface = &hardwareInterface;
}

void Buzzer::singleBeep(int frequency, int duration) {
  if (_isRapidBeeping || _isBeeping) {
    _hardwareInterface->stopPWM(_pin);
  }

  _isRapidBeeping = false;
  _isBeeping = true; // new flag to indicate a single beep is in progress
  _hardwareInterface->startPWM(_pin, frequency, duration);
}

void Buzzer::rapidBeep(int frequency, int duration, int interval) {
  if (_isRapidBeeping) {
    return;
  }

  if (_isBeeping) {
    _hardwareInterface->stopPWM(_pin);
  }

  _isBeeping = false;
  _isRapidBeeping = true;
  _hardwareInterface->startRepeatedPWM(_pin, frequency, duration, interval);
}

void Buzzer::stopBeep() {
  if (_isRapidBeeping || _isBeeping) {
    _hardwareInterface->stopPWM(_pin);
    _isRapidBeeping = false;
    _isBeeping = false;
  }
}
